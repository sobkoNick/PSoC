//*****************************************************************************
//*****************************************************************************
//  FILENAME: USBUART_1.h
//   Version: 1.40, Updated on 2011/3/29 at 14:31:18
//  Generated by PSoC Designer 5.1.2110.0
//
//  DESCRIPTION: USBUART User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2011. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef USBUART_1_INCLUDE
#define USBUART_1_INCLUDE

#include <m8c.h>

//-------------------------------------------------
// fastcall16 qualifiers for the  USBUART_1 API.
//-------------------------------------------------
#pragma fastcall16 USBUART_1_Start
#pragma fastcall16 USBUART_1_Stop
#pragma fastcall16 USBUART_1_Init

#pragma fastcall16 USBUART_1_Write
#pragma fastcall16 USBUART_1_CWrite
#pragma fastcall16 USBUART_1_PutString
#pragma fastcall16 USBUART_1_CPutString
#pragma fastcall16 USBUART_1_PutChar
#pragma fastcall16 USBUART_1_PutCRLF
#pragma fastcall16 USBUART_1_PutSHexByte
#pragma fastcall16 USBUART_1_PutSHexInt

#pragma fastcall16 USBUART_1_bGetRxCount
#pragma fastcall16 USBUART_1_bTxIsReady

#pragma fastcall16 USBUART_1_Read
#pragma fastcall16 USBUART_1_ReadAll
#pragma fastcall16 USBUART_1_ReadChar

#pragma fastcall16 USBUART_1_bCheckUSBActivity

#pragma fastcall16 USBUART_1_dwGetDTERate
#pragma fastcall16 USBUART_1_bGetCharFormat
#pragma fastcall16 USBUART_1_bGetParityType
#pragma fastcall16 USBUART_1_bGetDataBits
#pragma fastcall16 USBUART_1_bGetLineControlBitmap
#pragma fastcall16 USBUART_1_SendStateNotify
#pragma fastcall16 USBUART_1_SetPowerStaus

//-------------------------------------------------
// Prototypes of the USBUART_1 API.
//-------------------------------------------------
// high level API
extern void USBUART_1_Start(BYTE bMode);
extern void USBUART_1_Stop(void);
extern BOOL USBUART_1_Init(void);
extern void USBUART_1_Write(BYTE * pData, BYTE bLength);
extern void USBUART_1_CWrite(const BYTE * pData, BYTE bLength);
extern void USBUART_1_PutString(BYTE * pStr);
extern void USBUART_1_CPutString(const BYTE * pStr);
extern void USBUART_1_PutChar(BYTE bChar);
extern void USBUART_1_PutCRLF(void);
extern void USBUART_1_PutSHexByte(BYTE bValue);
extern void USBUART_1_PutSHexInt(INT iValue);
extern BYTE USBUART_1_bGetRxCount(void);
extern BYTE USBUART_1_bTxIsReady(void);
extern BYTE USBUART_1_Read(BYTE * pData, BYTE bLength);
extern void USBUART_1_ReadAll(BYTE * pData);
extern WORD USBUART_1_ReadChar(void);
extern BYTE USBUART_1_bCheckUSBActivity(void);
extern DWORD *USBUART_1_dwGetDTERate(DWORD * dwDTERate);
extern BYTE USBUART_1_bGetCharFormat(void);
extern BYTE USBUART_1_bGetParityType(void);
extern BYTE USBUART_1_bGetDataBits(void);
extern BYTE USBUART_1_bGetLineControlBitmap(void);
extern void USBUART_1_SendStateNotify(BYTE bState);
extern void USBUART_1_SetPowerStatus(BYTE bPowerStaus);

//-------------------------------------------------
// Constants for  USBUART_1 API's.
//-------------------------------------------------

#define USBUART_1_3V_OPERATION         0x02
#define USBUART_1_5V_OPERATION         0x03

#define USB_DEVICE_STATUS_BUS_POWERED         0x00
#define USB_DEVICE_STATUS_SELF_POWERED        0x01

#define USBUART_1_1_STOPBIT            0x00
#define USBUART_1_1_5_STOPBIT          0x01
#define USBUART_1_2_STOPBIT            0x02

#define USBUART_1_PARITY_NONE          0x00
#define USBUART_1_PARITY_ODD           0x01
#define USBUART_1_PARITY_EVEN          0x02
#define USBUART_1_PARITY_MARK          0x03
#define USBUART_1_PARITY_SPACE         0x04

#define USBUART_1_DTR                  0x01
#define USBUART_1_RTS                  0x02

#define USBUART_1_DCD                  0x01
#define USBUART_1_DSR                  0x02
#define USBUART_1_BREAK                0x04
#define USBUART_1_RING                 0x08
#define USBUART_1_FRAMING_ERR          0x10
#define USBUART_1_PARITY_ERR           0x20
#define USBUART_1_OVERRUN              0x40

//--------------------------------------------------
// Constants for interrupt regs and masks
//--------------------------------------------------
#pragma ioport USBUART_1_INT_REG: 0x0DF
BYTE           USBUART_1_INT_REG;
#define USBUART_1_INT_RESET_MASK 0x01
#define USBUART_1_INT_SOF_MASK   0x02
#define USBUART_1_INT_EP0_MASK   0x04
#define USBUART_1_INT_EP1_MASK   0x08
#define USBUART_1_INT_EP2_MASK   0x10
#define USBUART_1_INT_EP3_MASK   0x20
#define USBUART_1_INT_EP4_MASK   0x40
#define USBUART_1_INT_WAKEUP_MASK 0x80

#endif
// end of file USBUART_1.h
